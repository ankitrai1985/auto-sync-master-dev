name: Auto Sync Develop and Master

on:
  workflow_dispatch: # Manually trigger if needed

jobs:
  sync-to-master:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Ensures full history for merging

      - name: Check if a PR exists between Develop and Main
        env:
          GITHUB_TOKEN: ${{ secrets.DEV_TO_MASTER_SYNC }}
        run: |
          # Check if a PR exists between develop and main
          pr_exists=$(gh pr list --base main --head develop --json number --jq '.[0].number')
          
          if [ -z "$pr_exists" ]; then
            echo "No existing PR found, creating a new PR."
            # Create the PR without the --json flag for PR number
            gh pr create --base main --head develop --title "Auto Merge Develop -> Main" --body "Automated merge after production deployment."
            # Now get the PR number using the list command
            pr_number=$(gh pr list --base main --head develop --json number --jq '.[0].number')
            echo "Pull Request created with number $pr_number"
          else
            echo "PR already exists. Skipping creation."
            pr_number=$pr_exists
          fi

      - name: Merge PR into Main
        env:
          GITHUB_TOKEN: ${{ secrets.DEV_TO_MASTER_SYNC }}
        run: |
          if [ -n "$pr_number" ]; then
            gh pr merge $pr_number --auto --squash --delete-branch
            echo "PR merged into main"
          else
            echo "No PR to merge"
          fi

  sync-back-to-develop:
    needs: sync-to-master
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Merge Main Back into Develop
        env:
          GITHUB_TOKEN: ${{ secrets.DEV_TO_MASTER_SYNC }}
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git fetch origin
          git checkout develop
          git merge --no-ff origin/main -m "Sync main -> develop"
          git push origin develop
          echo "Main branch successfully merged into Develop"
